// Tests/ExchangeRateServiceTests.cs
public class ExchangeRateServiceTests
{
    private readonly IExchangeRateService _exchangeRateService;

    public ExchangeRateServiceTests()
    {
        var httpClient = new HttpClient { BaseAddress = new Uri("https://api.frankfurter.app/") };
        _exchangeRateService = new ExchangeRateService(httpClient, new MemoryCache(new MemoryCacheOptions()));
    }

    [Fact]
    public async Task GetLatestRatesAsync_ShouldReturnRates()
    {
        var rates = await _exchangeRateService.GetLatestRatesAsync("EUR");
        Assert.NotNull(rates);
        Assert.Equal("EUR", rates.BaseCurrency);
    }

    [Fact]
    public async Task ConvertCurrencyAsync_ShouldReturnConvertedAmount()
    {
        var amount = await _exchangeRateService.ConvertCurrencyAsync("EUR", "USD", 100);
        Assert.True(amount > 0);
    }
}
